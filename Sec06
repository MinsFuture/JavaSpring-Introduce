Sec06 - 스프링 DB 접근 기술
개발이나 테스트 용도로 쓰이는 가볍고 편리한 DB인 H2 데이터베이스를 간단하게 사용해본다.
먼저 테이블을 생성하고, 의존 관계를 주입해 h2에 접속한다.

스프링 부트는 DataSoruce라는 데이터베이스 커넥션을 획득할 때 사용하는 객체를 생성하고 스프링 빈으로 만들어두고, 이로 DI를 받는다.
이때 SOLID중에 하나인 확장에는 열려있고 수정, 변경에는 닫혀있다는 개방-폐쇄 원칙이 잘 드러나는데,
스프링의 DI를 사용하면 기존 코드를 전혀 손대지 않고, config 설정을 바꾸는 것 만으로 구현 클래스를 변경할 수 있다.
위 내용이 자바 스프링을 사용하는 가장 큰 핵심적인 이유라고 볼 수 있다.
이때 데이터를 H2 DB에 저장하므로, 스프링 서버를 다시 실행해도 데이터가 안전하게 저장된다(기존에는 메모리에 저장했기 때문에 종료 시 데이터가 날라감)

@SpringBootTest 어노테이션을 사용하면 스프링 컨테이너와 테스트를 함께 진행하고
@Transaction 어노테이션을 사용하면, 테스트 시작전에 트랙잭션을 시작하고 테스트 완료 후에 항상 롤백한다.
이를 이용하면 DB에 데이터가 남아있지 않으므로 반복적인 테스트를 가능하게 한다.

<JdbcTemplate>
스프링에서는 JdbcTemplate를 이용해서 JDBC API에서 본 반복 코드를 대부분 제거해준다. 하지만 SQL은 직접 작성해야한다.

<JPA>
JPA는 기존의 반복 코드와, 기본적인 SQL도 JPA가 직접 만들어서 실행해준다.
JPA를 사용하면, SQL과 데이터 중심의 설계에서 객체 중심의 설계로 패러다임을 전환할 수 있고, 개발 생산성을 높일 수 있다
스프링 데이터 JPA는 리포지토리에 구현 클래스없이 인터페이스 만으로 개발을 완료할 수 있게 한다.
그리고 기본 CRUD 기능도 스프링 데이터 JPA가 모두 제공한다.
스프링 데이터 JPA는 JPA를 편리하게 사용하도록 도와주는 기술이므로, JPA의 학습이 선행된 후에 스프링 데이터 JPA를 학습하도록 하자.

큰 흐름만 이해하고, 깊은 내용은 차근차근 학습하자!

