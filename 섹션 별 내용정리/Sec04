Sec04 - 스프링 빈과 의존관계
스프링 빈을 등록하는 방법은 크게 2가지로 나뉜다
1.컴포넌트 스캔과 자동 의존관계 설정
2.자바 코드로 직접 스프링 빈 등록하기

<컴포넌트 스캔과 자동 의존관계 설정>
회원 컨트롤러가 회원 서비스와 회원 리포지토리를 이용할 수 있게 의존관계를 주는 방법은,
생성자에 @AutoWired 어노테이션으로 스프링이 연관된 객체를 스프링 컨테이너에서 찾아서 넣어준다.
이때 스프링 컨테이너에는 현재 @Controller 어노테이션으로 인해 오직 "컨트롤러" 만이 스프링 컨테이너에 올라가있는 상황이다.
그래서 단순히 @AutoWired를 컨트롤러의 생성자에 붙여주면, 관련된 객체인 MemberService를 스프링 컨테이너에서 찾을 수 없어서 오류가 발생한다.

따라서 @AutoWired로 의존성을 주입하기 전에 서비스와 리포지토리를 스프링 컨테이너에 올리는 작업이 필요한데(스프링 빈으로 등록), 이때 사용하는 어노테이션이 @Component이다.
@Controller, @Service, @Repository는 @Component를 포함하기 때문에
서비스 클래스의 생성자에서는 @Service를, 리포지토리 클래스의 생성자에는 @Repository를 붙여주어여지만 각각이 스프링 빈으로 자동 등록된다.

이후에 @AutoWired로 객체간에 의존성을 주입하면된다.
참고로 기본적으로 스프링은 스프링 컨테이너에 스프링 빈을 등록할때 싱클톤으로 등록한다.
따라서 같은 스프링 빈이면 모두 같은 인스턴스라고 볼 수 있다.

<자바 코드로 직접 스프링 빈 등록하기>
메모리 리포지토리(DB)를 다른 리포지토리로 변경할 때, 간단한 코드 하나의 수정으로 이를 가능하게 하기 위해서는 컴포넌트 방식 대신에
자바 코드로 스프링 빈을 설정하는 방법이 있다.
직접 의존성을 주입하는 방법에는 필드 주입, Setter 주입, 생성자 주입이 있는데, 의존관계가 실행중에 동적으로 바뀌는 경우는 거의 없기때문에 보통 생성자 주입을 사용한다.
실무에서는 정형화된 컨트롤러, 서비스, 리포지토리 같은 코드는 컴포넌트 스캔을 사용한다.
그리고 정형화 되지않거나 상황에 따라 구현 클래스를 변경해야하면, 자바 코드 설정을 통해 스프링 빈으로 등록한다.







